USE [CORPORE]
GO


IF OBJECT_ID('stp_Calcula_Relatorio') IS NOT NULL
DROP PROCEDURE [dbo].[stp_Calcula_Relatorio]
GO

CREATE PROCEDURE [dbo].[stp_Calcula_Relatorio](@CODCOLIGADA INT, @CODFILIAL INT, @DATAINICIAL DATETIME, @DATAFINAL DATETIME, @TIPOCONTABIL CHAR(1), @CODLOC VARCHAR(20))
AS
BEGIN

DECLARE @TBALMOX TABLE(DATAENTRADA DATETIME, HORARIOEMISSAO DATETIME, NUMEROMOV VARCHAR(20), CODTMV VARCHAR(10), NOME VARCHAR(400), ENTRADA NUMERIC(18,2), SAIDAS NUMERIC(18,2), USAREVC INT, TIPO CHAR(1), CODLOC VARCHAR(20), OPERACAO CHAR(1) )

IF @TIPOCONTABIL = 'S' 
	BEGIN
		INSERT INTO @TBALMOX
		SELECT     TMOV.DATASAIDA AS DATAENTRADA,
		           TMOV.HORARIOEMISSAO,
				   TMOV.NUMEROMOV,
				   TTMV.CODTMV, 
				   TTMV.NOME,
				   IIF(TITMTMV.EFEITOSALDOA2 = 'A', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS ENTRADA,
				   IIF(TITMTMV.EFEITOSALDOA2 = 'D', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS SAIDAS,
				   TTMV.USAREVC,
				   'S' AS TIPO,
				   TMOV.CODLOC,
				   'N' AS OPERACAO
			  FROM TMOV WITH(NOLOCK) JOIN TTMV 	  ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
									 JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
									 JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
                         
			 WHERE TMOV.CODCOLIGADA=@CODCOLIGADA
			   AND TMOV.CODFILIAL  =@CODFILIAL
			   AND TMOV.CODLOC     =@CODLOC
			   AND TTMV.USAREVC    =2
			   AND TMOV.STATUS <> 'C'
			   AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
			   AND ((TITMTMV.EFEITOSALDOA2 = 'D') OR (TITMTMV.EFEITOSALDOA2 = 'A'))
			UNION ALL
			--Registra a entrada quando o tipo de movimento é transferência.
			SELECT TMOV.DATASAIDA AS DATAENTRADA,
				   TMOV.HORARIOEMISSAO,
				   TMOV.NUMEROMOV,
				   TTMV.CODTMV, 
				   TTMV.NOME,
				   TMOV.VALORLIQUIDO AS ENTRADA,
				   0 AS SAIDAS,
				   TTMV.USAREVC,
				   'S' AS TIPO,
				   TMOV.CODLOCDESTINO AS CODLOC,
				   'N' AS OPERACAO
			FROM TMOV WITH(NOLOCK) JOIN TTMV ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
								   JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
								   JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
			WHERE TMOV.CODCOLIGADA   =@CODCOLIGADA
			  AND TMOV.CODFILIAL     =@CODFILIAL
			  AND TMOV.CODLOCDESTINO =@CODLOC
			  AND TMOV.CODLOCENTREGA IS NOT NULL
			  AND TTMV.CLASSIFICACAO ='04.04.06'
			  AND TTMV.USAREVC       =2
			  AND TMOV.STATUS <> 'C'
			  AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
			  AND TITMTMV.EFEITOSALDOA2 = 'D'
			/*
				Ajuste Contábil 
			*/
			UNION ALL
			SELECT DATA,
			       NULL AS HORARIOEMISSAO,
				   DOCUMENTO,
	               '0.0.00' AS CODTMV,
	               'AJUSTE CONTÁBIL' AS NOME,
	               VALOR AS ENTRADA,
	               0 AS SAIDAS,
	               2 AS USAREVC,
	              'S' AS TIPO,
	              CASE WHEN CODCOLIGADA = 10 AND CODFILIAL=1 THEN '01.001'
				       WHEN CODCOLIGADA = 10 AND CODFILIAL=2 THEN '02.001'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=1 THEN '01.001'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=2 THEN '02.002'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=3 THEN '03.002' END AS CODLOC,
				  'C' OPERACAO
             FROM CPARTIDA 
            WHERE CODCOLIGADA=@CODCOLIGADA
			  AND CODFILIAL  =@CODFILIAL
              AND DATA >=@DATAINICIAL AND DATA <= @DATAFINAL
              AND INTEGRAAPLICACAO = 'C'
              AND DEBITO in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.003', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
			  AND ISNULL(VALOR,0) > 0
			UNION ALL
			SELECT DATA,
			       NULL AS HORARIOEMISSAO,
				   DOCUMENTO,
	               '0.0.00' AS CODTMV,
	               'AJUSTE CONTÁBIL' AS NOME,
	               0 AS ENTRADA,
	               VALOR AS SAIDAS,
	               2 AS USAREVC,
	              'S' AS TIPO,
	              CASE WHEN CODCOLIGADA = 10 AND CODFILIAL=1 THEN '01.001'
				       WHEN CODCOLIGADA = 10 AND CODFILIAL=2 THEN '02.001'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=1 THEN '01.001'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=2 THEN '02.002'
					   WHEN CODCOLIGADA = 8  AND CODFILIAL=3 THEN '03.002' END AS CODLOC,
				  'C' OPERACAO
             FROM CPARTIDA 
            WHERE CODCOLIGADA=@CODCOLIGADA
			  AND CODFILIAL  =@CODFILIAL
              AND DATA >=@DATAINICIAL AND DATA <= @DATAFINAL
              AND INTEGRAAPLICACAO = 'C'
              AND CREDITO in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.003', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
			  AND ISNULL(VALOR,0) > 0
		ORDER BY 1,2

	END ELSE
			IF @TIPOCONTABIL = 'N'
				BEGIN
					INSERT INTO @TBALMOX
					SELECT TMOV.DATASAIDA AS DATAENTRADA,
					       TMOV.HORARIOEMISSAO,
							   TMOV.NUMEROMOV,
							   TTMV.CODTMV, 
							   TTMV.NOME,
							   IIF(TITMTMV.EFEITOSALDOA2 = 'A', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS ENTRADA,
							   IIF(TITMTMV.EFEITOSALDOA2 = 'D', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS SAIDAS,
							   TTMV.USAREVC,
							   'N' AS TIPO,
							   TMOV.CODLOC,
							   'N' AS OPERACAO
						  FROM TMOV WITH(NOLOCK) JOIN TTMV 	  ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
												 JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
												 JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
                         
						 WHERE TMOV.CODCOLIGADA=@CODCOLIGADA
						   AND TMOV.CODFILIAL  =@CODFILIAL
						   AND TMOV.CODLOC     =@CODLOC
						   AND TTMV.USAREVC    <> 2
						   AND TMOV.STATUS <> 'C'
						   AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
						   AND ((TITMTMV.EFEITOSALDOA2 = 'D') OR (TITMTMV.EFEITOSALDOA2 = 'A'))
						UNION ALL
						--Registra a entrada quando o tipo de movimento é transferência.
						SELECT TMOV.DATASAIDA AS DATAENTRADA,
							   TMOV.HORARIOEMISSAO,
							   TMOV.NUMEROMOV,
							   TTMV.CODTMV, 
							   TTMV.NOME,
							   TMOV.VALORLIQUIDO AS ENTRADA,
							   0 AS SAIDAS,
							   TTMV.USAREVC,
							   'N' AS TIPO,
							   TMOV.CODLOCDESTINO AS CODLOC,
							   'N' AS OPERACAO
						FROM TMOV WITH(NOLOCK) JOIN TTMV ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
											   JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
											   JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
						WHERE TMOV.CODCOLIGADA   =@CODCOLIGADA
						  AND TMOV.CODFILIAL     =@CODFILIAL
						  AND TMOV.CODLOCDESTINO =@CODLOC
						  AND TMOV.CODLOCENTREGA IS NOT NULL
						  AND TTMV.CLASSIFICACAO ='04.04.06'
						  AND TTMV.USAREVC       =2
						  AND TMOV.STATUS <> 'C'
						  AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
						  AND TITMTMV.EFEITOSALDOA2 = 'D'		 
					
					ORDER BY TMOV.DATASAIDA, TMOV.HORARIOEMISSAO
				END ELSE 
						BEGIN
							INSERT INTO @TBALMOX
							SELECT TMOV.DATASAIDA AS DATAENTRADA,
							       TMOV.HORARIOEMISSAO,
									   TMOV.NUMEROMOV,
									   TTMV.CODTMV, 
									   TTMV.NOME,
									   IIF(TITMTMV.EFEITOSALDOA2 = 'A', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS ENTRADA,
									   IIF(TITMTMV.EFEITOSALDOA2 = 'D', IIF(TMOV.IDMOV=767640, TMOV.VALOROUTROS, TMOV.VALORLIQUIDO), 0) AS SAIDAS,
									   TTMV.USAREVC,
									   'T' AS TIPO,
									   TMOV.CODLOC,
									   'N' AS OPERACAO
								  FROM TMOV WITH(NOLOCK) JOIN TTMV 	  ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
														 JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
														 JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
                         
								 WHERE TMOV.CODCOLIGADA=@CODCOLIGADA
								   AND TMOV.CODFILIAL  =@CODFILIAL
								   AND TMOV.CODLOC     =@CODLOC
								   AND TMOV.STATUS <> 'C'
								   AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
								   AND ((TITMTMV.EFEITOSALDOA2 = 'D') OR (TITMTMV.EFEITOSALDOA2 = 'A'))
							
							UNION ALL
							--Registra a entrada quando o tipo de movimento é transferência.
							SELECT TMOV.DATASAIDA AS DATAENTRADA,
								   TMOV.HORARIOEMISSAO,
								   TMOV.NUMEROMOV,
								   TTMV.CODTMV, 
								   TTMV.NOME,
								   TMOV.VALORLIQUIDO AS ENTRADA,
								   0 AS SAIDAS,
								   TTMV.USAREVC,
								   'T' AS TIPO,
								   TMOV.CODLOCDESTINO AS CODLOC,
								   'N' AS OPERACAO
							FROM TMOV WITH(NOLOCK) JOIN TTMV ON TTMV.CODCOLIGADA=TMOV.CODCOLIGADA AND TTMV.CODTMV=TMOV.CODTMV
												   JOIN TTMVEXT ON TTMV.CODCOLIGADA=TTMVEXT.CODCOLIGADA AND TTMV.CODTMV=TTMVEXT.CODTMV
												   JOIN TITMTMV ON TTMV.CODCOLIGADA=TITMTMV.CODCOLIGADA AND TTMV.CODTMV=TITMTMV.CODTMV
							WHERE TMOV.CODCOLIGADA   =@CODCOLIGADA
							  AND TMOV.CODFILIAL     =@CODFILIAL
							  AND TMOV.CODLOCDESTINO =@CODLOC
							  AND TMOV.CODLOCENTREGA IS NOT NULL
							  AND TTMV.CLASSIFICACAO ='04.04.06'
							  AND TTMV.USAREVC       =2
							  AND TMOV.STATUS <> 'C'
							  AND TMOV.DATASAIDA >= @DATAINICIAL AND TMOV.DATASAIDA <= @DATAFINAL
							  AND TITMTMV.EFEITOSALDOA2 = 'D'
							/*
								Ajuste Contábil 
							*/
							UNION ALL
							SELECT DATA,
								   NULL AS HORARIOEMISSAO,
								   DOCUMENTO,
								   '0.0.00' AS CODTMV,
								   'AJUSTE CONTÁBIL' AS NOME,
								   VALOR AS ENTRADA,
								   0 AS SAIDAS,
								   2 AS USAREVC,
								  'T' AS TIPO,
								  CASE WHEN CODCOLIGADA = 10 AND CODFILIAL=1 THEN '01.001'
				                       WHEN CODCOLIGADA = 10 AND CODFILIAL=2 THEN '02.001'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=1 THEN '01.001'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=2 THEN '02.002'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=3 THEN '03.002' END AS CODLOC,
								  'C' OPERACAO
							 FROM CPARTIDA 
							WHERE CODCOLIGADA=@CODCOLIGADA
							  AND CODFILIAL  =@CODFILIAL
							  AND DATA >=@DATAINICIAL AND DATA <= @DATAFINAL
							  AND INTEGRAAPLICACAO = 'C'
							  AND DEBITO in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.003', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
							  AND ISNULL(VALOR,0) > 0
							UNION ALL
							SELECT DATA,
								   NULL AS HORARIOEMISSAO,
								   DOCUMENTO,
								   '0.0.00' AS CODTMV,
								   'AJUSTE CONTÁBIL' AS NOME,
								   0 AS ENTRADA,
								   VALOR AS SAIDAS,
								   2 AS USAREVC,
								  'T' AS TIPO,
								  CASE WHEN CODCOLIGADA = 10 AND CODFILIAL=1 THEN '01.001'
				                       WHEN CODCOLIGADA = 10 AND CODFILIAL=2 THEN '02.001'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=1 THEN '01.001'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=2 THEN '02.002'
					                   WHEN CODCOLIGADA = 8  AND CODFILIAL=3 THEN '03.002' END AS CODLOC,
								  'C' OPERACAO
							 FROM CPARTIDA 
							WHERE CODCOLIGADA=@CODCOLIGADA
							  AND CODFILIAL  =@CODFILIAL
							  AND DATA >=@DATAINICIAL AND DATA <= @DATAFINAL
							  AND INTEGRAAPLICACAO = 'C'
							  AND CREDITO in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.003', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
							  AND ISNULL(VALOR,0) > 0
						ORDER BY 1,2
						END
		

DELETE 
  FROM Integracao.TOTVS.RELAMOX 
 WHERE CODCOLIGADA  =@CODCOLIGADA 
   AND CODFILIAL    =@CODFILIAL
   AND CODLOC       =@CODLOC
   AND DATAENTRADA >= @DATAINICIAL AND DATAENTRADA <= @DATAFINAL

DECLARE @DATAENTRADA DATETIME, @HORA DATETIME, @NUMEROMOV VARCHAR(20), @CODTMV VARCHAR(10), @NOME VARCHAR(400), @ENTRADA NUMERIC(18,2), @SAIDAS NUMERIC(18,2), @VLRALMOXANTERIOR NUMERIC(18,2), @VLRCONTANTERIOR NUMERIC(18,2), @USAREVC INT, @TIPO CHAR(1), @LOC VARCHAR(20), @OPERACAO CHAR(1)
DECLARE CURSOR_ALOMXARIFADO CURSOR FOR
   
SELECT * FROM @TBALMOX
		

SET @VLRALMOXANTERIOR  = (SELECT SUM(dbo.fn_Saldo_Finan_Anterior(TPRDLOC.CODCOLIGADA, TPRDLOC.CODFILIAL, TPRDLOC.CODLOC, TPRDLOC.IDPRD, DATEADD(DAY, -1, @DATAINICIAL))) AS SaldoAlmoxarifado									       
						    FROM TPRDLOC JOIN TPRODUTO AS PRODUTO ON TPRDLOC.IDPRD=PRODUTO.IDPRD AND TPRDLOC.CODCOLIGADA=PRODUTO.CODCOLPRD
 										 JOIN TPRODUTODEF    AS DEF     ON PRODUTO.CODCOLPRD=DEF.CODCOLIGADA AND PRODUTO.IDPRD=DEF.IDPRD	
						   WHERE TPRDLOC.CODCOLIGADA   =@CODCOLIGADA
						     AND TPRDLOC.CODFILIAL     =@CODFILIAL
						     AND TPRDLOC.CODLOC        =@CODLOC)

SET @VLRCONTANTERIOR = (SELECT dbo.fnSaldo_Contabil_Anterior(@CODCOLIGADA, @CODFILIAL, @DATAINICIAL) AS SaldoContabil)

OPEN CURSOR_ALOMXARIFADO

FETCH NEXT FROM CURSOR_ALOMXARIFADO INTO @DATAENTRADA, @HORA, @NUMEROMOV, @CODTMV, @NOME, @ENTRADA, @SAIDAS, @USAREVC, @TIPO, @LOC, @OPERACAO

WHILE @@FETCH_STATUS = 0
BEGIN

SET @VLRALMOXANTERIOR = ((@VLRALMOXANTERIOR+IIF(@OPERACAO='C', 0, @ENTRADA)) - IIF(@OPERACAO='C', 0, @SAIDAS))
SET @VLRCONTANTERIOR  = ((@VLRCONTANTERIOR+ IIF(@USAREVC<>2, 0, @ENTRADA)) - IIF(@USAREVC<>2, 0, @SAIDAS))

INSERT INTO Integracao.TOTVS.RELAMOX (CODCOLIGADA, CODFILIAL, DATAENTRADA, NUMEROMOV, CODTMV, NOME, ENTRADA, SAIDAS, ALMOXARIFADO, CONTABIL, TIPO, CODLOC)
                              VALUES (@CODCOLIGADA, @CODFILIAL, @DATAENTRADA, @NUMEROMOV, @CODTMV, @NOME, @ENTRADA, @SAIDAS, @VLRALMOXANTERIOR, @VLRCONTANTERIOR, @TIPO, @LOC)  


    FETCH NEXT FROM CURSOR_ALOMXARIFADO INTO @DATAENTRADA, @HORA, @NUMEROMOV, @CODTMV, @NOME, @ENTRADA, @SAIDAS, @USAREVC, @TIPO, @LOC, @OPERACAO
END
CLOSE CURSOR_ALOMXARIFADO
DEALLOCATE CURSOR_ALOMXARIFADO

END
GO


IF OBJECT_ID('fn_Saldo_Finan_Anterior') IS NOT NULL
DROP FUNCTION [dbo].[fn_Saldo_Finan_Anterior]
GO

CREATE FUNCTION [dbo].[fn_Saldo_Finan_Anterior] (@CODCOLIGADA INT, @CODFILIAL INT, @CODLOC VARCHAR(20), @IDPRD INT, @DATABASE DATE)
RETURNS NUMERIC(18,2)
AS 
BEGIN

DECLARE @SALDOANT NUMERIC(18,2);

SET @SALDOANT = (SELECT TOP 1 SALDO.TOTALMOV          
                   FROM TRELSLD AS SALDO
                  WHERE CODCOLIGADA  =@CODCOLIGADA
                    AND CODFILIAL    =@CODFILIAL
                    AND CODLOC       =@CODLOC
                    AND SALDO        =2
                    AND IDPRD        =@IDPRD
                    AND DATAMOVIMENTO<=@DATABASE 
                    AND IDMOV = (SELECT MAX(IDMOV) 
								  FROM TRELSLD 
				                 WHERE CODCOLIGADA  =@CODCOLIGADA
				                   AND CODFILIAL    =@CODFILIAL
				                   AND CODLOC       =@CODLOC
				                   AND IDPRD        =@IDPRD
								   AND SALDO        =2
				                   AND DATAMOVIMENTO<=@DATABASE
								   AND DATAMOVIMENTO=(SELECT MAX(DATAMOVIMENTO) 
														FROM TRELSLD 
													   WHERE CODCOLIGADA  =@CODCOLIGADA
														 AND CODFILIAL    =@CODFILIAL
														 AND SALDO        =2
														 AND CODLOC       =@CODLOC
														 AND IDPRD        =@IDPRD
														 AND DATAMOVIMENTO<=@DATABASE))
					ORDER BY SEQUENCIAL DESC)

RETURN @SALDOANT
END
GO


IF OBJECT_ID('fnSaldo_Contabil_Anterior') IS NOT NULL
DROP FUNCTION [dbo].[fnSaldo_Contabil_Anterior]
GO

CREATE FUNCTION [dbo].[fnSaldo_Contabil_Anterior](@CODCOLIGADA INT, @CODFILIAL INT, @DATA DATE)
RETURNS NUMERIC(18,2)
AS
BEGIN

DECLARE @DEBITO NUMERIC(18,2), @CREDITO NUMERIC(18,2), @RETORNO NUMERIC(18,2)

SET @DEBITO=(SELECT SUM(VALOR) AS VALOR
               FROM CPARTIDA 
			  WHERE CODCOLIGADA=@CODCOLIGADA
			    AND CODFILIAL  =@CODFILIAL 
			    AND DEBITO     in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
			    AND DATA       < @DATA)

SET @CREDITO=(SELECT SUM(VALOR) 
			    FROM CPARTIDA 
			   WHERE CODCOLIGADA=@CODCOLIGADA
			     AND CODFILIAL  =@CODFILIAL
			     AND CREDITO   in ('1.1.5.128.001', '1.1.5.128.002', '1.1.5.126.005', '1.1.5.126.004', '1.1.5.126.001', '1.1.5.126.002')
			     AND DATA       < @DATA)

SET @RETORNO =ISNULL(@DEBITO,0)-ISNULL(@CREDITO,0)

RETURN ISNULL(@RETORNO,0)

END